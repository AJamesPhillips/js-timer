// Generated by CoffeeScript 1.3.3
(function() {
  var Timer, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.Timer = Timer = (function() {

    Timer.nextId = 0;

    function Timer() {
      this.id = this.nextId++;
      this.activities = {};
      this.nextActivityId = 0;
    }

    Timer.prototype.start = function(activityId) {
      var _base;
      if (activityId == null) {
        activityId = this.nextActivityId++;
      }
      (_base = this.activities)[activityId] || (_base[activityId] = []);
      this.activities[activityId].push({
        start: new Date
      });
      return activityId;
    };

    Timer.prototype.stop = function(activityId, runNumber) {
      if (activityId == null) {
        activityId = this.nextActivityId - 1;
      }
      if (runNumber == null) {
        runNumber = this.activities[activityId].length - 1;
      }
      this.activities[activityId][runNumber].end = new Date;
      this.activities[activityId][runNumber].total = this.activities[activityId][runNumber].end - this.activities[activityId][runNumber].start;
      return console.log("Activity " + activityId + ", run number " + runNumber + " took " + this.activities[activityId][runNumber].total + " milli seconds");
    };

    Timer.prototype.results = function() {
      var activityId, average, run, runs, total, _i, _len, _ref;
      average = {};
      console.log("averaging");
      _ref = this.activities;
      for (activityId in _ref) {
        runs = _ref[activityId];
        for (_i = 0, _len = runs.length; _i < _len; _i++) {
          run = runs[_i];
          total = run.total;
        }
        average[activityId] = total / activityId.length;
        console.log("Activity " + activityId + " averaged " + average[activityId]);
      }
      return average;
    };

    Timer.prototype.formatedResults = function() {
      var activityAverage, activityId, results, _ref;
      results = "";
      _ref = this.results();
      for (activityId in _ref) {
        activityAverage = _ref[activityId];
        results += "Activity " + activityId + " averaged " + activityAverage + "ms<br>";
      }
      return results;
    };

    return Timer;

  })();

}).call(this);
