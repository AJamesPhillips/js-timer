// Generated by CoffeeScript 1.3.3
(function() {
  var make2Narray_v1, makeArray_v1, outputResults, prepareArrays, results, root, timer1, timer2;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  makeArray_v1 = function(size) {
    var _i, _results;
    return (function() {
      _results = [];
      for (var _i = 0; 0 <= size ? _i < size : _i > size; 0 <= size ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this);
  };

  make2Narray_v1 = function(sizeX, sizeY) {
    var array2N, i, _i, _j, _len, _results, _results1;
    array2N = (function() {
      _results = [];
      for (var _i = 0; 0 <= sizeX ? _i < sizeX : _i > sizeX; 0 <= sizeX ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this);
    _results1 = [];
    for (_j = 0, _len = array2N.length; _j < _len; _j++) {
      i = array2N[_j];
      _results1.push(array2N[i] = makeArray_v1(sizeY));
    }
    return _results1;
  };

  prepareArrays = function(type, arrayDimensions, repeats) {
    var arraySpec, i, timer, x, _i, _j, _len;
    if (arrayDimensions == null) {
      arrayDimensions = [
        {
          x: 10,
          y: 10
        }, {
          x: 1000,
          y: 1000
        }, {
          x: 100,
          y: 100
        }
      ];
    }
    if (repeats == null) {
      repeats = 10;
    }
    timer = new root.Timer;
    for (i = _i = 0, _len = arrayDimensions.length; _i < _len; i = ++_i) {
      arraySpec = arrayDimensions[i];
      for (x = _j = 0; 0 <= repeats ? _j < repeats : _j > repeats; x = 0 <= repeats ? ++_j : --_j) {
        timer.start(i);
        switch (type) {
          case "v1":
            make2Narray_v1(arraySpec.x, arraySpec.y);
            break;
          case "v2":
            make2Narray_v2(arraySpec.x, arraySpec.y);
        }
        timer.stop(i);
      }
    }
    return timer;
  };

  outputResults = function(resultsString) {
    return document.getElementById('results').innerHTML = resultsString;
  };

  timer1 = prepareArrays("v1");

  results = "<h3>For prepareArrays_v1 </h3>" + (timer1.formatedResults()) + "<br>";

  timer2 = prepareArrays("v2");

  results += "<h3>For prepareArrays_v2 </h3>" + (timer2.formatedResults()) + "<br>";

  outputResults(results);

}).call(this);
